/* COMP 2138  - Assignment 1
 * Name       - Neha Arora
 * Student ID - 101043939
 */
 
 /*Ques 1: */
 SELECT CATEGORY_NAME, 
        COUNT(PRODUCT_ID) AS "NUMBER_OF_PRODUCTS", 
        MAX(LIST_PRICE) AS MOST_EXPENSIVE_PRODUCT_PRICE
 FROM CATEGORIES c INNER JOIN PRODUCTS p
      ON c.CATEGORY_ID = p.CATEGORY_ID
 GROUP BY CATEGORY_NAME
 ORDER BY NUMBER_OF_PRODUCTS DESC;
 
 
 /*Ques 2: */
 SELECT EMAIL_ADDRESS, 
       SUM(ITEM_PRICE * QUANTITY) AS TOTAL_ITEM_PRICE,
       SUM(DISCOUNT_AMOUNT * QUANTITY) AS TOTAL_DISCOUNT
 FROM CUSTOMERS c INNER JOIN ORDERS o            /*Joining three tables*/
      ON c.CUSTOMER_ID = o.CUSTOMER_ID
      INNER JOIN ORDER_ITEMS oi
      ON o.ORDER_ID = oi.ORDER_ID
 GROUP BY EMAIL_ADDRESS
 ORDER BY TOTAL_ITEM_PRICE DESC;
 
 
 /*Ques 3: */
 SELECT EMAIL_ADDRESS, 
        COUNT(o.ORDER_ID) AS "NUMBER_OF_ORDERS", 
        ((SUM(ITEM_PRICE)-SUM(DISCOUNT_AMOUNT)) * SUM(QUANTITY)) AS TOTAL_AMOUNT
 FROM CUSTOMERS c INNER JOIN ORDERS o            /*Joining three tables*/
      ON c.CUSTOMER_ID = o.CUSTOMER_ID
      INNER JOIN ORDER_ITEMS oi
      ON o.ORDER_ID = oi.ORDER_ID
 GROUP BY EMAIL_ADDRESS
 HAVING COUNT(o.ORDER_ID) > 1
 ORDER BY TOTAL_AMOUNT DESC;
 
 
 /*Ques 4: */
 SELECT COALESCE(PRODUCT_NAME, 'GRAND_TOTAL'), 
        (SUM((ITEM_PRICE - DISCOUNT_AMOUNT) * QUANTITY)) AS TOTAL_AMOUNT 
 FROM PRODUCTS p JOIN ORDER_ITEMS oi
      ON p.PRODUCT_ID = oi.PRODUCT_ID
 GROUP BY ROLLUP(PRODUCT_NAME);
 
 
 /*Ques 5: */
 SELECT EMAIL_ADDRESS,
        COUNT(DISTINCT PRODUCT_ID) AS NUMBER_OF_PRODUCTS_ORDERED
 FROM CUSTOMERS c INNER JOIN ORDERS o
      ON c.CUSTOMER_ID = o.CUSTOMER_ID
      INNER JOIN ORDER_ITEMS oi
      ON o.ORDER_ID = oi.ORDER_ID
 GROUP BY EMAIL_ADDRESS
 HAVING COUNT(DISTINCT PRODUCT_ID) > 1;
 
 
 /*Ques 6: */
 SELECT DISTINCT CATEGORY_NAME
 FROM CATEGORIES
 WHERE CATEGORY_ID IN
       (SELECT CATEGORY_ID
        FROM PRODUCTS)
 ORDER BY CATEGORY_NAME;
 
 
 /*Ques 7: */
 SELECT PRODUCT_NAME, LIST_PRICE
 FROM PRODUCTS p
 WHERE p.LIST_PRICE > (SELECT AVG(LIST_PRICE) FROM PRODUCTS) 
 ORDER BY LIST_PRICE DESC;
 
 
 /*Ques 8: */
 SELECT CATEGORY_NAME 
 FROM CATEGORIES c 
 WHERE NOT EXISTS
       (SELECT *
        FROM PRODUCTS p
        WHERE p.CATEGORY_ID = c.CATEGORY_ID); 
 
 
 /*Ques 9: */
 SELECT DISTINCT p1.PRODUCT_NAME, p1.DISCOUNT_PERCENT
 FROM PRODUCTS p1
 WHERE p1.DISCOUNT_PERCENT NOT IN
    (SELECT p2.DISCOUNT_PERCENT
     FROM PRODUCTS p2
     WHERE p1.PRODUCT_NAME <> p2.PRODUCT_NAME)
 ORDER BY PRODUCT_NAME;
 
 
 /*Ques 10: */
 SELECT EMAIL_ADDRESS, ORDER_ID AS ORDER_ID_OF_OLDEST_ORDER, ORDER_DATE
 FROM CUSTOMERS c INNER JOIN ORDERS o
      ON c.CUSTOMER_ID = o.CUSTOMER_ID
 WHERE ORDER_DATE = (SELECT MIN(ORDER_DATE)
                     FROM ORDERS O
                     WHERE o.CUSTOMER_ID = c.CUSTOMER_ID );
 